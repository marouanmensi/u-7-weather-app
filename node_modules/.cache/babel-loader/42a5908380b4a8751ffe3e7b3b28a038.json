{"ast":null,"code":"var _jsxFileName = \"/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx\";\nimport React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullData: []\n    };\n\n    this.getForecast = () => {\n      if (this.props.match.params.id) {\n        // try {\n        //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n        //   fetch(weatherURL)\n        //     .then((res) => res.json())\n        //     .then((data) => {\n        const data = require(`../assets/forecast.json`);\n\n        const fullData = data[\"list\"];\n        this.setState({\n          fullData\n        }, () => console.log(\"STATE\", this.state)); // });\n        // } catch (e) {\n        //   console.log(\"Error in API request of Forecast component.\", e);\n        // }\n      }\n    };\n\n    this.weather3Hours = () => {\n      let interval = this.state.fullData.forEach(full => {\n        let newDate = new Date();\n        const weekday = full.dt * 1000;\n        newDate.setTime(weekday);\n        const imgURL = `http://openweathermap.org/img/wn/${full.weather[0].icon}@2x.png`;\n        return this.fullWeatherDetailRender(newDate, full, imgURL);\n      });\n      return interval;\n    };\n\n    this.fullWeatherDetailRender = (newDate, full, imgURL, index) => {\n      console.log(\"full\", full);\n      console.log(\"newDate\", newDate);\n      console.log(\"imgURL\", imgURL);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"data-time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"info-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, moment(newDate).format(\"dddd\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, moment(newDate).format(\"MMMM Do\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"hour\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, moment(newDate).format(\"LT\"))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"conditions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, full.weather[0].description), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"weatherIcon\",\n        src: imgURL,\n        alt: \"weather icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"temp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"celicus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, Math.round(full.main.temp), \"\\xB0c\"), \" |\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"feh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, Math.round(full.main.temp * 9 / 5 + 32), \" \\xB0F\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"Humidity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Humidity: \", full.main.humidity, \" %\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"windSpeed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"wind: \", full.wind.speed, \" kmh \")));\n    };\n  }\n\n  componentDidMount() {\n    this.getForecast();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, this.weather3Hours());\n  }\n\n}\n\nexport default HourlyWeather;","map":{"version":3,"sources":["/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx"],"names":["React","Component","moment","HourlyWeather","state","fullData","getForecast","props","match","params","id","data","require","setState","console","log","weather3Hours","interval","forEach","full","newDate","Date","weekday","dt","setTime","imgURL","weather","icon","fullWeatherDetailRender","index","format","description","Math","round","main","temp","humidity","wind","speed","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  state = {\n    fullData: [],\n  };\n\n  componentDidMount() {\n    this.getForecast();\n  }\n  getForecast = () => {\n    if (this.props.match.params.id) {\n      // try {\n      //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n\n      //   fetch(weatherURL)\n      //     .then((res) => res.json())\n      //     .then((data) => {\n      const data = require(`../assets/forecast.json`);\n\n      const fullData = data[\"list\"];\n      this.setState(\n        {\n          fullData,\n        },\n        () => console.log(\"STATE\", this.state)\n      );\n      // });\n      // } catch (e) {\n      //   console.log(\"Error in API request of Forecast component.\", e);\n      // }\n    }\n  };\n\n  weather3Hours = () => {\n    let interval = this.state.fullData.forEach((full) => {\n      let newDate = new Date();\n      const weekday = full.dt * 1000;\n      newDate.setTime(weekday);\n      const imgURL = `http://openweathermap.org/img/wn/${full.weather[0].icon}@2x.png`;\n      return this.fullWeatherDetailRender(newDate, full, imgURL);\n    });\n    return interval;\n  };\n\n  fullWeatherDetailRender = (newDate, full, imgURL, index) => {\n    console.log(\"full\", full);\n    console.log(\"newDate\", newDate);\n    console.log(\"imgURL\", imgURL);\n    return (\n      <div key={index} className=\"container\">\n        <div className=\"info\">\n          <div className=\"data-time\">\n            <h3 className=\"info-day\">{moment(newDate).format(\"dddd\")}</h3>\n            <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do\")}</p>\n            <p className=\"hour\">{moment(newDate).format(\"LT\")}</p>\n          </div>\n          <p className=\"conditions\">{full.weather[0].description}</p>\n          <img className=\"weatherIcon\" src={imgURL} alt=\"weather icon\"></img>\n          <p className=\"temp\">\n            <span className=\"celicus\">{Math.round(full.main.temp)}°c</span> |\n            <span className=\"feh\">\n              {Math.round((full.main.temp * 9) / 5 + 32)} °F\n            </span>\n          </p>\n          <p className=\"Humidity\">Humidity: {full.main.humidity} %</p>\n          <p className=\"windSpeed\">wind: {full.wind.speed} kmh </p>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.weather3Hours()}</React.Fragment>;\n  }\n}\n\nexport default HourlyWeather;\n"]},"metadata":{},"sourceType":"module"}