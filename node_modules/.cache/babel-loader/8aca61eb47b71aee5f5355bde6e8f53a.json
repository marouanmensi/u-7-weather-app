{"ast":null,"code":"var _jsxFileName = \"/home/dev/chasacademy/weather-app/src/components/Weather.jsx\";\nimport React, { Component } from \"react\";\nimport config from \"../config.json\";\nimport Forecast from \"./Forecast\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      city: \"\",\n      cityId: 2673730,\n      country: \"\",\n      humidity: \"\",\n      wind: \"\",\n      description: \"\",\n      sunrise: \"\",\n      sunset: \"\",\n      icon: \"\",\n      error: \"\"\n    };\n\n    this.getWeather = async () => {\n      let fetchUrl = \"\";\n\n      if (!this.props.cityId) {\n        fetchUrl = `http://api.openweathermap.org/data/2.5/weather?id=${this.state.cityId}&appid=${config.API_KEY}`;\n      } else {\n        fetchUrl = `http://api.openweathermap.org/data/2.5/weather?id=${this.props.cityId}&appid=${config.API_KEY}`;\n      }\n\n      const api = await fetch(fetchUrl);\n      const data = await api.json();\n\n      if (data) {\n        this.setState({\n          city: data.name,\n          country: data.sys.country,\n          temperature: Math.round(data.main.temp - 273.15),\n          humidity: data.main.humidity,\n          wind: data.wind.speed,\n          description: data.weather[0].description,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          icon: data.weather[0].icon,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  componentDidUpdate() {\n    this.getWeather();\n  }\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      temperature,\n      country,\n      city,\n      cityId,\n      icon,\n      error\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"1px solid darkred\",\n        color: \"darkred\",\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Weather Component\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, city, \", \", country), /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/img/\" + weatherCode + \".png\",\n      style: {\n        width: 100\n      },\n      placeholder: \"img\",\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Temperature : \", temperature, \"\\xB0C / \", temperature * 9 / 5 + 32, \" \\xB0F\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Description : \", description), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Humidity : \", humidity, \" %\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Wind : \", wind, \" mph\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Sunrise : \", sunsriseClock), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Sunset : \", sunsetClock)), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, \"error :\", error), /*#__PURE__*/React.createElement(Forecast, {\n      cityId: cityId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/dev/chasacademy/weather-app/src/components/Weather.jsx"],"names":["React","Component","config","Forecast","Weather","state","temperature","city","cityId","country","humidity","wind","description","sunrise","sunset","icon","error","getWeather","fetchUrl","props","API_KEY","api","fetch","data","json","setState","name","sys","Math","round","main","temp","speed","weather","componentDidMount","componentDidUpdate","render","sunsriseClock","Date","toLocaleTimeString","sunsetClock","weatherCode","slice","toString","border","color","margin","process","env","PUBLIC_URL","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport config from \"../config.json\";\nimport Forecast from \"./Forecast\";\n\nclass Weather extends Component {\n  state = {\n    temperature: \"\",\n    city: \"\",\n    cityId: 2673730,\n    country: \"\",\n    humidity: \"\",\n    wind: \"\",\n    description: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    icon: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  componentDidUpdate() {\n    this.getWeather();\n  }\n\n  getWeather = async () => {\n    let fetchUrl = \"\";\n    if (!this.props.cityId) {\n      fetchUrl = `http://api.openweathermap.org/data/2.5/weather?id=${this.state.cityId}&appid=${config.API_KEY}`;\n    } else {\n      fetchUrl = `http://api.openweathermap.org/data/2.5/weather?id=${this.props.cityId}&appid=${config.API_KEY}`;\n    }\n    const api = await fetch(fetchUrl);\n    const data = await api.json();\n    if (data) {\n      this.setState({\n        city: data.name,\n        country: data.sys.country,\n        temperature: Math.round(data.main.temp - 273.15),\n        humidity: data.main.humidity,\n        wind: data.wind.speed,\n        description: data.weather[0].description,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        icon: data.weather[0].icon,\n        error: \"\",\n      });\n    }\n  };\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      temperature,\n      country,\n      city,\n      cityId,\n      icon,\n      error,\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return (\n      <div\n        style={{\n          border: \"1px solid darkred\",\n          color: \"darkred\",\n          margin: \"20px\",\n        }}\n      >\n        <h1>Weather Component</h1>\n        <h3>\n          {city}, {country}\n        </h3>\n\n        <img\n          src={process.env.PUBLIC_URL + \"/img/\" + weatherCode + \".png\"}\n          style={{ width: 100 }}\n          placeholder=\"img\"\n          alt=\"img\"\n        />\n        <ul>\n          <li>\n            Temperature : {temperature}°C / {(temperature * 9) / 5 + 32} °F\n          </li>\n          <li>Description : {description}</li>\n          <li>Humidity : {humidity} %</li>\n          <li>Wind : {wind} mph</li>\n          <li>Sunrise : {sunsriseClock}</li>\n          <li>Sunset : {sunsetClock}</li>\n        </ul>\n        {error && <p>error :{error}</p>}\n        <Forecast cityId={cityId} />\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}