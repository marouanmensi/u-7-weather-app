{"ast":null,"code":"var _jsxFileName = \"/home/dev/chasacademy/weather-app/src/components/Weather.jsx\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      humidity: \"\",\n      wind: \"\",\n      description: \"\",\n      sunrise: \"\",\n      sunset: \"\",\n      icon: \"\",\n      error: \"\"\n    };\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?id=2673730&appid=4e934866ee0119b2698276839717ae38\");\n      const data2 = await api_call.json();\n      this.setState({\n        city: data2.name,\n        country: data2.sys.country,\n        temperature: Math.round(data2.main.temp - 273.15),\n        humidity: data2.main.humidity,\n        wind: data2.wind.speed,\n        description: data2.weather[0].description,\n        sunrise: data2.sys.sunrise,\n        sunset: data2.sys.sunset,\n        icon: data2.weather[0].icon,\n        error: \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      country,\n      city,\n      icon,\n      error\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, city, \", \", country), /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"img/\" + weatherCode + \".png\",\n      placeholder: \"img\",\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Temperature :\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, temperature, \"\\xB0C / \", temperature * 9 / 5 + 32, \" \\xB0F\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Description : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }, description)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Humidity : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }, \" \", humidity, \" %\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Wind : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    }, \" \", wind, \" mph\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Sunrise : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, \" \", sunsriseClock)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Sunset : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }\n    }, \" \", sunsetClock))), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"error :\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }, \" \", error)));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/dev/chasacademy/weather-app/src/components/Weather.jsx"],"names":["Weather","Component","state","temperature","humidity","wind","description","sunrise","sunset","icon","error","getWeather","api_call","fetch","data2","json","setState","city","name","country","sys","Math","round","main","temp","speed","weather","componentDidMount","render","sunsriseClock","Date","toLocaleTimeString","sunsetClock","weatherCode","slice","toString","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["class Weather extends Component {\n  state = {\n    temperature: \"\",\n    humidity: \"\",\n    wind: \"\",\n    description: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    icon: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?id=2673730&appid=4e934866ee0119b2698276839717ae38\"\n    );\n    const data2 = await api_call.json();\n    this.setState({\n      city: data2.name,\n      country: data2.sys.country,\n      temperature: Math.round(data2.main.temp - 273.15),\n      humidity: data2.main.humidity,\n      wind: data2.wind.speed,\n      description: data2.weather[0].description,\n      sunrise: data2.sys.sunrise,\n      sunset: data2.sys.sunset,\n      icon: data2.weather[0].icon,\n      error: \"\",\n    });\n  };\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      country,\n      city,\n      icon,\n      error,\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return (\n      <React.Fragment>\n        <div>\n          {city}, {country}\n        </div>\n        <img\n          src={process.env.PUBLIC_URL + \"img/\" + weatherCode + \".png\"}\n          placeholder=\"img\"\n          alt=\"img\"\n        />\n        <ul>\n          <li>\n            Temperature :{\" \"}\n            <span>\n              {temperature}°C / {(temperature * 9) / 5 + 32} °F\n            </span>\n          </li>\n          <li>\n            Description : <span>{description}</span>\n          </li>\n          <li>\n            Humidity : <span> {humidity} %</span>\n          </li>\n          <li>\n            Wind : <span> {wind} mph</span>\n          </li>\n          <li>\n            Sunrise : <span> {sunsriseClock}</span>\n          </li>\n          <li>\n            Sunset : <span> {sunsetClock}</span>\n          </li>\n        </ul>\n        {error && (\n          <p>\n            error :<span> {error}</span>\n          </p>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}