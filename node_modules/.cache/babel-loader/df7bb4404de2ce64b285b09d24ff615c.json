{"ast":null,"code":"var _jsxFileName = \"/home/dev/chasacademy/weather-app/src/components/Weather.jsx\";\nimport React, { Component } from \"react\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      humidity: \"\",\n      wind: \"\",\n      description: \"\",\n      sunrise: \"\",\n      sunset: \"\",\n      error: \"\"\n    };\n\n    this.getWeather = async () => {\n      const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?id=${this.props.match.params.id}&appid=4e934866ee0119b2698276839717ae38`);\n      const data = await api.json();\n\n      if (data) {\n        this.setState({\n          temperature: Math.round(data.main.temp - 273.15),\n          humidity: data.main.humidity,\n          wind: data.wind.speed,\n          description: data.weather[0].description,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      temperature,\n      // country,\n      city,\n      icon,\n      error\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, city), /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"img/\" + weatherCode + \".png\",\n      style: {\n        width: 100\n      },\n      placeholder: \"img\",\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Temperature :\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, temperature, \"\\xB0C / \", temperature * 9 / 5 + 32, \" \\xB0F\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Description : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }, description)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Humidity : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }, \" \", humidity, \" %\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Wind : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    }, \" \", wind, \" mph\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Sunrise : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, \" \", sunsriseClock)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Sunset : \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }\n    }, \" \", sunsetClock))), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"error :\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }, \" \", error)));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/dev/chasacademy/weather-app/src/components/Weather.jsx"],"names":["React","Component","Weather","state","temperature","humidity","wind","description","sunrise","sunset","error","getWeather","api","fetch","props","match","params","id","data","json","setState","Math","round","main","temp","speed","weather","sys","componentDidMount","render","city","icon","sunsriseClock","Date","toLocaleTimeString","sunsetClock","weatherCode","slice","toString","process","env","PUBLIC_URL","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Weather extends Component {\n  state = {\n    temperature: \"\",\n    humidity: \"\",\n    wind: \"\",\n    description: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather = async () => {\n    const api = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?id=${this.props.match.params.id}&appid=4e934866ee0119b2698276839717ae38`\n    );\n    const data = await api.json();\n    if (data) {\n      this.setState({\n        temperature: Math.round(data.main.temp - 273.15),\n        humidity: data.main.humidity,\n        wind: data.wind.speed,\n        description: data.weather[0].description,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        error: \"\",\n      });\n    }\n  };\n\n  render() {\n    const {\n      sunrise,\n      sunset,\n      description,\n      wind,\n      humidity,\n      temperature,\n      // country,\n      city,\n      icon,\n      error,\n    } = this.state;\n    const sunsriseClock = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetClock = new Date(sunset * 1000).toLocaleTimeString();\n    const weatherCode = icon.slice(0, 2).toString();\n    return (\n      <React.Fragment>\n        <div>{city}</div>\n        <img\n          src={process.env.PUBLIC_URL + \"img/\" + weatherCode + \".png\"}\n          style={{ width: 100 }}\n          placeholder=\"img\"\n          alt=\"img\"\n        />\n        <ul>\n          <li>\n            Temperature :{\" \"}\n            <span>\n              {temperature}°C / {(temperature * 9) / 5 + 32} °F\n            </span>\n          </li>\n          <li>\n            Description : <span>{description}</span>\n          </li>\n          <li>\n            Humidity : <span> {humidity} %</span>\n          </li>\n          <li>\n            Wind : <span> {wind} mph</span>\n          </li>\n          <li>\n            Sunrise : <span> {sunsriseClock}</span>\n          </li>\n          <li>\n            Sunset : <span> {sunsetClock}</span>\n          </li>\n        </ul>\n        {error && (\n          <p>\n            error :<span> {error}</span>\n          </p>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}