{"ast":null,"code":"var _jsxFileName = \"/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx\";\nimport React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullData: []\n    };\n\n    this.getForecast = () => {\n      if (this.props.match.params.id) {\n        // try {\n        //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n        //   fetch(weatherURL)\n        //     .then((res) => res.json())\n        //     .then((data) => {\n        const data = require(`../assets/forecast.json`);\n\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"00:00:00\"));\n        const fullData = data[\"list\"];\n        this.setState({\n          fullData\n        }, () => console.log(\"STATE\", this.state)); // });\n        // } catch (e) {\n        //   console.log(\"Error in API request of Forecast component.\", e);\n        // }\n      }\n    };\n\n    this.fullWeatherDetailRender = () => {\n      return this.state.fullData.map((full, index) => /*#__PURE__*/React.createElement(HourlyWeather, {\n        full: full,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getForecast();\n  }\n\n  render() {\n    const {\n      fullData\n    } = this.state;\n    const imgURL = `http://openweathermap.org/img/wn/${fullData.weather[0].icon}@2x.png`;\n    let newDate = new Date();\n    const weekday = fullData.full.dt * 1000;\n    newDate.setTime(weekday);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"Details\") // <div>\n    //   <div className=\"container\">\n    //     <div className=\"info\">\n    //       <div className=\"data-time\">\n    //         <h3 className=\"info-day\">{moment(newDate).format(\"dddd\")}</h3>\n    //         <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do\")}</p>\n    //         <p className=\"hour\">{moment(newDate).format(\"LT\")}</p>\n    //       </div>\n    //       <p className=\"conditions\">{fullData.weather[0].description}</p>\n    //       <img className=\"weatherIcon\" src={imgURL} alt=\"weather icon\"></img>\n    //       <p className=\"temp\">\n    //         <span className=\"celicus\">\n    //           {Math.round(fullData.main.temp)}째c\n    //         </span>{\" \"}\n    //         |\n    //         <span className=\"feh\">\n    //           {Math.round((fullData.main.temp * 9) / 5 + 32)} 째F\n    //         </span>\n    //       </p>\n    //       <p className=\"Humidity\">Humidity: {fullData.main.humidity} %</p>\n    //       <p className=\"windSpeed\">wind: {fullData.wind.speed} kmh </p>\n    //     </div>\n    //   </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default HourlyWeather;","map":{"version":3,"sources":["/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx"],"names":["React","Component","moment","HourlyWeather","state","fullData","getForecast","props","match","params","id","data","require","dailyData","list","filter","reading","dt_txt","includes","setState","console","log","fullWeatherDetailRender","map","full","index","componentDidMount","render","imgURL","weather","icon","newDate","Date","weekday","dt","setTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4B;;AAAA,SAQpCC,WARoC,GAQtB,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5B,EAAgC;AAC9B;AACA;AAEA;AACA;AACA;AACA,cAAMC,IAAI,GAAGC,OAAO,CAAE,yBAAF,CAApB;;AACA,cAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,MAAV,CAAkBC,OAAD,IACjCA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CADgB,CAAlB;AAGA,cAAMb,QAAQ,GAAGM,IAAI,CAAC,MAAD,CAArB;AACA,aAAKQ,QAAL,CACE;AACEd,UAAAA;AADF,SADF,EAIE,MAAMe,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKjB,KAA1B,CAJR,EAZ8B,CAkB9B;AACA;AACA;AACA;AACD;AACF,KAhCmC;;AAAA,SAkCpCkB,uBAlCoC,GAkCV,MAAM;AAC9B,aAAO,KAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBAC7B,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAED,IAArB;AAA2B,QAAA,GAAG,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAP;AAGD,KAtCmC;AAAA;;AAKpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,WAAL;AACD;;AAiCDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAMwB,MAAM,GAAI,oCAAmCvB,QAAQ,CAACwB,OAAT,CAAiB,CAAjB,EAAoBC,IAAK,SAA5E;AACA,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,OAAO,GAAG5B,QAAQ,CAACmB,IAAT,CAAcU,EAAd,GAAmB,IAAnC;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgBF,OAAhB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBF;AA2BD;;AA1EmC;;AA6EtC,eAAe9B,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  state = {\n    fullData: [],\n  };\n\n  componentDidMount() {\n    this.getForecast();\n  }\n  getForecast = () => {\n    if (this.props.match.params.id) {\n      // try {\n      //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n\n      //   fetch(weatherURL)\n      //     .then((res) => res.json())\n      //     .then((data) => {\n      const data = require(`../assets/forecast.json`);\n      const dailyData = data.list.filter((reading) =>\n        reading.dt_txt.includes(\"00:00:00\")\n      );\n      const fullData = data[\"list\"];\n      this.setState(\n        {\n          fullData,\n        },\n        () => console.log(\"STATE\", this.state)\n      );\n      // });\n      // } catch (e) {\n      //   console.log(\"Error in API request of Forecast component.\", e);\n      // }\n    }\n  };\n\n  fullWeatherDetailRender = () => {\n    return this.state.fullData.map((full, index) => (\n      <HourlyWeather full={full} key={index} />\n    ));\n  };\n\n  render() {\n    const { fullData } = this.state;\n    const imgURL = `http://openweathermap.org/img/wn/${fullData.weather[0].icon}@2x.png`;\n    let newDate = new Date();\n    const weekday = fullData.full.dt * 1000;\n    newDate.setTime(weekday);\n\n    return (\n      <h1>Details</h1>\n      // <div>\n      //   <div className=\"container\">\n      //     <div className=\"info\">\n      //       <div className=\"data-time\">\n      //         <h3 className=\"info-day\">{moment(newDate).format(\"dddd\")}</h3>\n      //         <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do\")}</p>\n      //         <p className=\"hour\">{moment(newDate).format(\"LT\")}</p>\n      //       </div>\n      //       <p className=\"conditions\">{fullData.weather[0].description}</p>\n      //       <img className=\"weatherIcon\" src={imgURL} alt=\"weather icon\"></img>\n      //       <p className=\"temp\">\n      //         <span className=\"celicus\">\n      //           {Math.round(fullData.main.temp)}째c\n      //         </span>{\" \"}\n      //         |\n      //         <span className=\"feh\">\n      //           {Math.round((fullData.main.temp * 9) / 5 + 32)} 째F\n      //         </span>\n      //       </p>\n      //       <p className=\"Humidity\">Humidity: {fullData.main.humidity} %</p>\n      //       <p className=\"windSpeed\">wind: {fullData.wind.speed} kmh </p>\n      //     </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nexport default HourlyWeather;\n"]},"metadata":{},"sourceType":"module"}