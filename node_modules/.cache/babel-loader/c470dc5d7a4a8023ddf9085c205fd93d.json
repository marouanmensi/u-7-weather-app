{"ast":null,"code":"var _jsxFileName = \"/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx\";\nimport React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullData: []\n    };\n\n    this.getForecast = () => {\n      if (this.props.match.params.id) {\n        // try {\n        //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n        //   fetch(weatherURL)\n        //     .then((res) => res.json())\n        //     .then((data) => {\n        const data = require(`../assets/forecast.json`);\n\n        const fullData = data[\"list\"];\n        this.setState({\n          fullData\n        }, () => console.log(\"STATE\", this.state)); // });\n        // } catch (e) {\n        //   console.log(\"Error in API request of Forecast component.\", e);\n        // }\n      }\n    };\n\n    this.weather3Hours = () => {\n      this.state.fullData.forEach(full => {\n        let newDate = new Date();\n        const weekday = full.dt * 1000;\n        newDate.setTime(weekday);\n        const imgURL = `http://openweathermap.org/img/wn/${full.weather[0].icon}@2x.png`;\n        return this.fullWeatherDetailRender(newDate, full, imgURL);\n      });\n    };\n\n    this.fullWeatherDetailRender = (newDate, full, imgURL) => {\n      console.log(\"full\", full); // return full.map((interval, index) => (\n      //   <div key={index} className=\"container\">\n      //     <div className=\"info\">\n      //       <div className=\"data-time\">\n      //         <h3 className=\"info-day\">{moment(newDate).format(\"dddd\")}</h3>\n      //         <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do\")}</p>\n      //         <p className=\"hour\">{moment(newDate).format(\"LT\")}</p>\n      //       </div>\n      //       <p className=\"conditions\">{interval.weather[0].description}</p>\n      //       <img className=\"weatherIcon\" src={imgURL} alt=\"weather icon\"></img>\n      //       <p className=\"temp\">\n      //         <span className=\"celicus\">{Math.round(interval.main.temp)}째c</span>{\" \"}\n      //         |\n      //         <span className=\"feh\">\n      //           {Math.round((interval.main.temp * 9) / 5 + 32)} 째F\n      //         </span>\n      //       </p>\n      //       <p className=\"Humidity\">Humidity: {interval.main.humidity} %</p>\n      //       <p className=\"windSpeed\">wind: {interval.wind.speed} kmh </p>\n      //     </div>\n      //   </div>\n      // ));\n    };\n  }\n\n  componentDidMount() {\n    this.getForecast();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, this.weather3Hours());\n  }\n\n}\n\nexport default HourlyWeather;","map":{"version":3,"sources":["/home/enzo/dev/projects/chasacademy/current/style/src/components/HourlyWeather.jsx"],"names":["React","Component","moment","HourlyWeather","state","fullData","getForecast","props","match","params","id","data","require","setState","console","log","weather3Hours","forEach","full","newDate","Date","weekday","dt","setTime","imgURL","weather","icon","fullWeatherDetailRender","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4B;;AAAA,SAQpCC,WARoC,GAQtB,MAAM;AAClB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5B,EAAgC;AAC9B;AACA;AAEA;AACA;AACA;AACA,cAAMC,IAAI,GAAGC,OAAO,CAAE,yBAAF,CAApB;;AAEA,cAAMP,QAAQ,GAAGM,IAAI,CAAC,MAAD,CAArB;AACA,aAAKE,QAAL,CACE;AACER,UAAAA;AADF,SADF,EAIE,MAAMS,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKX,KAA1B,CAJR,EAV8B,CAgB9B;AACA;AACA;AACA;AACD;AACF,KA9BmC;;AAAA,SAgCpCY,aAhCoC,GAgCpB,MAAM;AACpB,WAAKZ,KAAL,CAAWC,QAAX,CAAoBY,OAApB,CAA6BC,IAAD,IAAU;AACpC,YAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,cAAMC,OAAO,GAAGH,IAAI,CAACI,EAAL,GAAU,IAA1B;AACAH,QAAAA,OAAO,CAACI,OAAR,CAAgBF,OAAhB;AACA,cAAMG,MAAM,GAAI,oCAAmCN,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBC,IAAK,SAAxE;AACA,eAAO,KAAKC,uBAAL,CAA6BR,OAA7B,EAAsCD,IAAtC,EAA4CM,MAA5C,CAAP;AACD,OAND;AAOD,KAxCmC;;AAAA,SA+CpCG,uBA/CoC,GA+CV,CAACR,OAAD,EAAUD,IAAV,EAAgBM,MAAhB,KAA2B;AACnDV,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB,EADmD,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAvEmC;AAAA;;AAKpCU,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,WAAL;AACD;;AAkEDuB,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKb,aAAL,EAAjB,CAAP;AACD;;AA3EmC;;AA8EtC,eAAeb,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../hourlyWeather.css\";\nimport moment from \"moment\";\n\nclass HourlyWeather extends Component {\n  state = {\n    fullData: [],\n  };\n\n  componentDidMount() {\n    this.getForecast();\n  }\n  getForecast = () => {\n    if (this.props.match.params.id) {\n      // try {\n      //   const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${this.props.cityId}&appid=${config.API_KEY}`;\n\n      //   fetch(weatherURL)\n      //     .then((res) => res.json())\n      //     .then((data) => {\n      const data = require(`../assets/forecast.json`);\n\n      const fullData = data[\"list\"];\n      this.setState(\n        {\n          fullData,\n        },\n        () => console.log(\"STATE\", this.state)\n      );\n      // });\n      // } catch (e) {\n      //   console.log(\"Error in API request of Forecast component.\", e);\n      // }\n    }\n  };\n\n  weather3Hours = () => {\n    this.state.fullData.forEach((full) => {\n      let newDate = new Date();\n      const weekday = full.dt * 1000;\n      newDate.setTime(weekday);\n      const imgURL = `http://openweathermap.org/img/wn/${full.weather[0].icon}@2x.png`;\n      return this.fullWeatherDetailRender(newDate, full, imgURL);\n    });\n  };\n\n  // return this.state.fullData.map((full, index) => (\n\n  //   <Weather3Hours full={full} key={index}  />\n  //   ));};\n\n  fullWeatherDetailRender = (newDate, full, imgURL) => {\n    console.log(\"full\", full);\n    // return full.map((interval, index) => (\n    //   <div key={index} className=\"container\">\n    //     <div className=\"info\">\n    //       <div className=\"data-time\">\n    //         <h3 className=\"info-day\">{moment(newDate).format(\"dddd\")}</h3>\n    //         <p className=\"text-muted\">{moment(newDate).format(\"MMMM Do\")}</p>\n    //         <p className=\"hour\">{moment(newDate).format(\"LT\")}</p>\n    //       </div>\n    //       <p className=\"conditions\">{interval.weather[0].description}</p>\n    //       <img className=\"weatherIcon\" src={imgURL} alt=\"weather icon\"></img>\n    //       <p className=\"temp\">\n    //         <span className=\"celicus\">{Math.round(interval.main.temp)}째c</span>{\" \"}\n    //         |\n    //         <span className=\"feh\">\n    //           {Math.round((interval.main.temp * 9) / 5 + 32)} 째F\n    //         </span>\n    //       </p>\n    //       <p className=\"Humidity\">Humidity: {interval.main.humidity} %</p>\n    //       <p className=\"windSpeed\">wind: {interval.wind.speed} kmh </p>\n    //     </div>\n    //   </div>\n    // ));\n  };\n\n  render() {\n    return <React.Fragment>{this.weather3Hours()}</React.Fragment>;\n  }\n}\n\nexport default HourlyWeather;\n"]},"metadata":{},"sourceType":"module"}